version: '3'

services:
    db:
        image: postgres:12-alpine
        restart: always
        volumes:
            - dbdata:/var/lib/postgresql/data
        environment:
            POSTGRES_PASSWORD: ${CAL_STORAGE_PASSWORD}
        networks:
            backend:
                aliases:
                    - db
    db_migrate:
        build:
            context: ..
            dockerfile: ./migrations/Dockerfile
        depends_on:
            - db
        environment:
            CAL_STORAGE_HOST: db
            CAL_STORAGE_PORT: 5432
            CAL_STORAGE_USER: ${CAL_STORAGE_USER}
            CAL_STORAGE_PASSWORD: ${CAL_STORAGE_PASSWORD}
            CAL_STORAGE_DBNAME: ${CAL_STORAGE_DBNAME}
        networks:
            - backend
    mq:
        image: rabbitmq:3-management-alpine
        restart: always
        environment:
            RABBITMQ_DEFAULT_USER: ${CAL_RMQ_USER}
            RABBITMQ_DEFAULT_PASS: ${CAL_RMQ_PASSWORD}
        ports:
            - '15672:15672'
        networks:
            backend:
                aliases:
                    - mq
    calendar:
        build:
            context: ..
            dockerfile: ./deployments/Dockerfile.calendar
        depends_on:
            - db
        restart: always
        environment:
            CAL_HTTP_HOST: localhost
            CAL_HTTP_PORT: ${CAL_HTTP_PORT}
            CAL_GRPC_HOST: localhost
            CAL_GRPC_PORT: ${CAL_GRPC_PORT}
            CAL_STORAGE_HOST: db
            CAL_STORAGE_PORT: 5432
            CAL_STORAGE_USER: ${CAL_STORAGE_USER}
            CAL_STORAGE_PASSWORD: ${CAL_STORAGE_PASSWORD}
            CAL_STORAGE_DBNAME: ${CAL_STORAGE_DBNAME}
        ports:
            - '${CAL_HTTP_PORT}:${CAL_HTTP_PORT}'
            - '${CAL_GRPC_PORT}:${CAL_GRPC_PORT}'
        networks:
            backend:
                aliases:
                    - calendar
    sheduler:
        build:
            context: ..
            dockerfile: ./deployments/Dockerfile.scheduler
        depends_on:
            - db
            - mq
        restart: always
        environment:
            CAL_STORAGE_HOST: db
            CAL_STORAGE_PORT: 5432
            CAL_STORAGE_USER: ${CAL_STORAGE_USER}
            CAL_STORAGE_PASSWORD: ${CAL_STORAGE_PASSWORD}
            CAL_STORAGE_DBNAME: ${CAL_STORAGE_DBNAME}
            CAL_RMQ_HOST: mq
            CAL_RMQ_PORT: 5672
            CAL_RMQ_USER: ${CAL_RMQ_USER}
            CAL_RMQ_PASSWORD: ${CAL_RMQ_PASSWORD}
        networks:
            backend:
                aliases:
                    - scheduler
    sender:
        build:
            context: ..
            dockerfile: ./deployments/Dockerfile.sender
        depends_on:
            - mq
        restart: always
        environment:
            CAL_RMQ_HOST: mq
            CAL_RMQ_PORT: 5672
            CAL_RMQ_USER: ${CAL_RMQ_USER}
            CAL_RMQ_PASSWORD: ${CAL_RMQ_PASSWORD}
        networks:
            backend:
                aliases:
                    - sender

volumes:
    dbdata:

networks:
    backend:
        driver: bridge
